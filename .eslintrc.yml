root: true
env:
  browser: true
  commonjs: true
  es2022: true
  jest: true
  node: true
extends:
  - eslint:all
plugins:
  - jest
ignorePatterns:
  - playground/
parserOptions:
  ecmaVersion: latest
rules:
  # When adding a new rule, please add a empty inline comment to changed options.
  indent:
    - error
    - 2 # 4
    - ignoredNodes: []
      SwitchCase: 0
      VariableDeclarator: 1
      outerIIFEBody: 1
      MemberExpression: 1
      FunctionDeclaration:
        parameters: 1
        body: 1
      FunctionExpression:
        parameters: 1
        body: 1
      StaticBlock:
        body: 1
      CallExpression:
        arguments: 1
      ArrayExpression: 1
      ObjectExpression: 1
      ImportDeclaration: 1
      flatTernaryExpressions: false
      offsetTernaryExpressions: false
      ignoreComments: false
  quotes:
    - error
    - single # double
    - avoidEscape: true
      allowTemplateLiterals: false
  semi:
    - error
    - never # always
    - beforeStatementContinuationChars: never
  accessor-pairs:
    - error
    - setWithoutGet: true
      getWithoutSet: false
      enforceForClassMembers: true
  array-bracket-newline:
    - error
    - consistent # multiline: true
                 # minItems: null
  array-bracket-spacing:
    - error
    - never
    - arraysInArrays: false
      objectsInArrays: false
      singleValue: false
  array-callback-return:
    - error
    - allowImplicit: false
      checkForEach: false
  array-element-newline:
    - error
    - consistent # always
    - multiline: true # false
      minItems: null
  arrow-body-style:
    - error
    - as-needed
    - requireReturnForObjectLiteral: false
  arrow-parens:
    - error
    - always
  arrow-spacing:
    - error
    - before: true
      after: true
  block-scoped-var:
    - error
  block-spacing:
    - error
    - always
  brace-style:
    - error
    - 1tbs # = One True Brace Style
    - allowSingleLine: false
  camelcase:
    - error
    - properties: always
      ignoreDestructuring: false
      ignoreImports: false
      ignoreGlobals: false
      allow: []
  capitalized-comments:
    - off # error
    - always
    - ignoreInlineComments: false
      ignoreConsecutiveComments: false
      ignorePattern: ^$
  class-methods-use-this:
    - error
    - enforceForClassFields: true
      exceptMethods: []
  comma-dangle:
    - error
    - arrays: always-multiline # never
      objects: always-multiline # never
      imports: always-multiline # never
      exports: always-multiline # never
      functions: never
  comma-spacing:
    - error
    - before: false
      after: true
  comma-style:
    - error
    - last
  complexity:
    - error
    - 20
  computed-property-spacing:
    - error
    - never
    - enforceForClassMembers: true
  consistent-return:
    - error
    - treatUndefinedAsUnspecified: false
  consistent-this:
    - error
    - that
  constructor-super:
    - error
  curly:
    - error
    - all
  default-case:
    - error
  default-case-last:
    - error
  default-param-last:
    - error
  dot-location:
    - error
    - object
  dot-notation:
    - off # error
    - allowKeywords: true
      allowPattern: ^$
  eol-last:
    - error
    - always
  eqeqeq:
    - error
    - always
  for-direction:
    - error
  func-call-spacing:
    - error
    - never
  func-name-matching:
    - error
    - always
  func-names:
    - error
    - always
  func-style:
    - off # error
    - expression
    - allowArrowFunctions: false
  function-call-argument-newline:
    - error
    - always
  function-paren-newline:
    - error
    - multiline
  generator-star-spacing:
    - error
    - before: true
      after: false
  getter-return:
    - error
    - allowImplicit: false
  grouped-accessor-pairs:
    - error
    - anyOrder
  guard-for-in:
    - error
  id-denylist:
    - error
  id-length:
    - error
    - min: 2
      # max: Infinity
      properties: always
      exceptions: []
      exceptionPatterns: []
  id-match:
    - error
    # - ^[a-z]+([A-Z][a-z]+)*$
    # - properties: false
    #   classFields: false
    #   onlyDeclarations: false
    #   ignoreDestructuring: false
  implicit-arrow-linebreak:
    - off # error
    - beside
  init-declarations:
    - error
    - always
  jest/consistent-test-it:
    - error
    - {}
  jest/expect-expect:
    - error
    - assertFunctionNames:
        - expect
      additionalTestBlockFunctions: []
  jest/max-expects:
    - error
    - max: 5
  jest/max-nested-describe:
    - error
    - max: 5
  jest/no-alias-methods:
    - error
  jest/no-commented-out-tests:
    - error
  jest/no-conditional-expect:
    - error
  jest/no-conditional-in-test:
    - error
  jest/no-deprecated-functions:
    - error
  jest/no-disabled-tests:
    - error
  jest/no-done-callback:
    - error
  jest/no-duplicate-hooks:
    - error
  jest/no-export:
    - error
  jest/no-focused-tests:
    - error
  jest/no-hooks:
    - error
  jest/no-identical-title:
    - error
  jest/no-interpolation-in-snapshots:
    - error
  jest/no-jasmine-globals:
    - error
  jest/no-large-snapshots:
    - error
    - maxSize: 12
      inlineMaxSize: 6
  jest/no-mocks-import:
    - error
  jest/no-restricted-jest-methods:
    - error
    - {}
  jest/no-restricted-matchers:
    - error
    - {}
  jest/no-standalone-expect:
    - error
    - {}
  jest/no-test-prefixes:
    - error
  jest/no-test-return-statement:
    - error
  jest/no-untyped-mock-factory:
    - error
  jest/prefer-called-with:
    - error
  jest/prefer-comparison-matcher:
    - error
  jest/prefer-each:
    - error
  jest/prefer-equality-matcher:
    - error
  jest/prefer-expect-assertions:
    - error
  jest/prefer-expect-resolves:
    - error
  jest/prefer-hooks-in-order:
    - error
  jest/prefer-hooks-on-top:
    - error
  jest/prefer-lowercase-title:
    - error
    - ignore: []
      allowedPrefixes: []
      ignoreTopLevelDescribe: false
  jest/prefer-mock-promise-shorthand:
    - error
  jest/prefer-snapshot-hint:
    - error
    - multi
  jest/prefer-spy-on:
    - error
  jest/prefer-strict-equal:
    - error
  jest/prefer-to-be:
    - error
  jest/prefer-to-contain:
    - error
  jest/prefer-to-have-length:
    - error
  jest/prefer-todo:
    - error
  jest/require-hook:
    - error
  jest/require-to-throw-message:
    - error
  jest/require-top-level-describe:
    - error
    - {}
  jest/valid-describe-callback:
    - error
  jest/valid-expect-in-promise:
    - error
  jest/valid-expect:
    - error
    - alwaysAwait: false
      asyncMatchers:
        - toResolve
        - toReject
      minArgs: 1
      maxArgs: 1
  jest/valid-title:
    - error
    - ignoreTypeOfDescribeName: false
  jsx-quotes:
    - error
    - prefer-double
  key-spacing:
    - error
    - beforeColon: false
      afterColon: true
      mode: strict
  keyword-spacing:
    - error
    - before: true
      after: true
  line-comment-position:
    - off # error
    - position: above
      applyDefaultIgnorePatterns: true
      ignorePattern: ^$
  linebreak-style:
    - error
    - unix
  lines-around-comment:
    - error
    - beforeBlockComment: true
  lines-between-class-members:
    - error
    - always
    - exceptAfterSingleLine: false
  logical-assignment-operators:
    - error
    - always
    - enforceForIfStatements: false
  max-classes-per-file:
    - error
    - max: 1
      ignoreExpressions: false
  max-depth:
    - error
    - 4
  max-len:
    - off # error
    - code: 80
      tabWidth: 4
  max-lines:
    - error
    - max: 300
      skipBlankLines: false
      skipComments: false
  max-lines-per-function:
    - error
    - max: 50
      skipBlankLines: false
      skipComments: false
      IIFEs: false
  max-nested-callbacks:
    - error
    - 10
  max-params:
    - error
    - 3
  max-statements:
    - error
    - 10
  max-statements-per-line:
    - error
    - max: 1
  multiline-comment-style:
    - off # error
    - starred-block
  multiline-ternary:
    - error
    - always
  new-cap:
    - error
    - newIsCap: true
      capIsNew: true
      newIsCapExceptions: []
      capIsNewExceptions: []
      properties: true
  new-parens:
    - error
    - always
  newline-per-chained-call:
    - error
    - ignoreChainWithDepth: 2
  no-alert:
    - error
  no-array-constructor:
    - error
  no-async-promise-executor:
    - error
  no-await-in-loop:
    - error
  no-bitwise:
    - off # error
    - allow: []
      int32Hint: false
  no-caller:
    - error
  no-case-declarations:
    - error
  no-class-assign:
    - error
  no-compare-neg-zero:
    - error
  no-cond-assign:
    - error
    - except-parens
  no-confusing-arrow:
    - error
    - allowParens: true
  no-console:
    - error
    # - allow: []
  no-const-assign:
    - error
  no-constant-binary-expression:
    - error
  no-constant-condition:
    - error
    - checkLoops: true
  no-constructor-return:
    - error
  no-continue:
    - error
  no-control-regex:
    - error
  no-debugger:
    - error
  no-delete-var:
    - error
  no-div-regex:
    - error
  no-dupe-args:
    - error
  no-dupe-class-members:
    - error
  no-dupe-else-if:
    - error
  no-dupe-keys:
    - error
  no-duplicate-case:
    - error
  no-duplicate-imports:
    - error
    - includeExports: false
  no-else-return:
    - error
    - allowElseIf: true
  no-empty:
    - error
    - allowEmptyCatch: false
  no-empty-character-class:
    - error
  no-empty-function:
    - error
    - allow: []
  no-empty-pattern:
    - error
  no-eq-null:
    - error
  no-eval:
    - error
  no-ex-assign:
    - error
  no-extend-native:
    - error
  no-extra-bind:
    - error
  no-extra-boolean-cast:
    - error
    -
      enforceForLogicalOperands: false
  no-extra-label:
    - error
  no-extra-parens:
    - off # error
    - all
    - conditionalAssign: false
      returnAssign: false
      nestedBinaryExpressions: false
      ignoreJSX: none
      enforceForArrowConditionals: false
      enforceForSequenceExpressions: false
      enforceForNewInMemberExpressions: false
      enforceForFunctionPrototypeMethods: false
      # allowParensAfterCommentPattern: RegExp
  no-extra-semi:
    - error
  no-fallthrough:
    - error
    - allowEmptyCase: true
      # commentPattern: RegExp
  no-floating-decimal:
    - error
  no-func-assign:
    - error
  no-global-assign:
    - error
  no-implicit-coercion:
    - error
    - boolean: true
      number: true
      string: true
      disallowTemplateShorthand: false
      allow: []
  no-implicit-globals:
    - error
    - lexicalBindings: false
  no-implied-eval:
    - error
  no-import-assign:
    - error
  no-inline-comments:
    - off # error
    - ignorePattern: ^$
  no-inner-declarations:
    - error
    - functions
  no-invalid-regexp:
    - error
    - allowConstructorFlags: []
  no-invalid-this:
    - error
    - capIsConstructor: true
  no-irregular-whitespace:
    - error
    - skipComments: true
      skipRegExps: true
      skipStrings: true
      skipTemplates: true
  no-iterator:
    - error
  no-label-var:
    - error
  no-labels:
    - error
    - allowLoop: false
      allowSwitch: false
  no-lone-blocks:
    - error
  no-lonely-if:
    - error
  no-loop-func:
    - error
  no-loss-of-precision:
    - error
  no-magic-numbers:
    - off # error
    - detectObjects: false
      enforceConst: false
      ignore: []
      ignoreArrayIndexes: false
      ignoreDefaultValues: false
      # ignoreClassFieldInitialValues: false
  no-misleading-character-class:
    - error
  no-mixed-operators:
    - error
    - allowSamePrecedence: true
      # groups: [] ##########################################
  no-mixed-spaces-and-tabs:
    - error
  no-multi-assign:
    - error
    - ignoreNonDeclaration: false
  no-multi-spaces:
    - error
    - ignoreEOLComments: false
      exceptions:
        Property: true
  no-multi-str:
    - error
  no-multiple-empty-lines:
    - error
    - max: 2
      maxBOF: 2
      maxEOF: 2
  no-negated-condition:
    - error
  no-nested-ternary:
    - error
  no-new:
    - error
  no-new-func:
    - error
  no-new-object:
    - error
  no-new-symbol:
    - error
  no-new-wrappers:
    - error
  no-nonoctal-decimal-escape:
    - error
  no-obj-calls:
    - error
  no-octal:
    - error
  no-octal-escape:
    - error
  no-param-reassign:
    - error
    - props: false
      # ignorePropertyModificationsFor: []
  no-plusplus:
    - error
    - allowForLoopAfterthoughts: false
  no-promise-executor-return:
    - error
  no-proto:
    - error
  no-prototype-builtins:
    - error
  no-redeclare:
    - error
    - builtinGlobals: true
  no-regex-spaces:
    - error
  no-restricted-exports:
    - error
    # - restrictedNamedExports: []
    #   restrictDefaultExports:
    #     direct: false
    #     named: false
    #     defaultFrom: false
    #     namedFrom: false
    #     namespaceFrom: false
  no-restricted-globals:
    - error
    # - has some options
  no-restricted-imports:
    - error
    # - has some options
  no-restricted-properties:
    - error
    # - has some options
  no-restricted-syntax:
    - error
    # - has some options
  no-return-assign:
    - error
    - except-parens
  no-return-await:
    - error
  no-script-url:
    - error
  no-self-assign:
    - error
    - props: true
  no-self-compare:
    - error
  no-sequences:
    - error
    - allowInParentheses: true
  no-setter-return:
    - error
  no-shadow:
    - error
    - builtinGlobals: false
  no-shadow-restricted-names:
    - error
  no-sparse-arrays:
    - error
  no-tabs:
    - error
    - allowIndentationTabs: false
  no-template-curly-in-string:
    - error
  no-ternary:
    - error
  no-this-before-super:
    - error
  no-throw-literal:
    - error
  no-trailing-spaces:
    - error
    - skipBlankLines: false
      ignoreComments: false
  no-undef:
    - error
  no-undef-init:
    - error
  no-undefined:
    - error
  no-underscore-dangle:
    - error
    - allow: []
      allowAfterThis: false
      allowAfterSuper: false
      allowAfterThisConstructor: false
      enforceInMethodNames: false
      enforceInClassFields: false
      allowFunctionParams: true
      # allowInArrayDestructuring: true
      # allowInObjectDestructuring: true
  no-unexpected-multiline:
    - error
  no-unmodified-loop-condition:
    - error
  no-unneeded-ternary:
    - error
    - defaultAssignment: true
  no-unreachable:
    - error
  no-unreachable-loop:
    - error
  no-unsafe-finally:
    - error
  no-unsafe-negation:
    - error
    - enforceForOrderingRelations: false
  no-unsafe-optional-chaining:
    - error
    -
      disallowArithmeticOperators: false
  no-unused-expressions:
    - error
    - allowShortCircuit: false
      allowTernary: false
      allowTaggedTemplates: false
      enforceForJSX: false
  no-unused-labels:
    - error
  no-unused-private-class-members:
    - error
  no-unused-vars:
    - error
    - vars: all
      args: after-used
      ignoreRestSiblings: false
      caughtErrors: none
      # argsIgnorePattern: ^_
      # caughtErrorsIgnorePattern: ^_
      # destructuredArrayIgnorePattern: ^_
      # varsIgnorePattern: ^_
  no-use-before-define:
    - error
    - functions: true
      classes: true
      variables: true
      allowNamedExports: false
  no-useless-backreference:
    - error
  no-useless-call:
    - error
  no-useless-catch:
    - error
  no-useless-computed-key:
    - error
    - enforceForClassMembers: false
  no-useless-concat:
    - error
  no-useless-constructor:
    - error
  no-useless-escape:
    - error
  no-useless-rename:
    - error
    - ignoreDestructuring: false
      ignoreImport: false
      ignoreExport: false
  no-useless-return:
    - error
  no-var:
    - error
  no-void:
    - error
    - allowAsStatement: false
  no-warning-comments:
    - error
    - terms:
        - todo
        - fixme
        - xxx
      location: start
      # decoration: []
  no-whitespace-before-property:
    - error
  no-with:
    - error
  nonblock-statement-body-position:
    - error
    - beside
    - overrides: {}
  object-curly-newline:
    - error
    # - has some options
  object-curly-spacing:
    - error
    - always # never
    - arraysInObjects: true # false
      objectsInObjects: true # false
  object-property-newline:
    - error
    -
      allowAllPropertiesOnSameLine: false
  object-shorthand:
    - error
    - always
    - avoidQuotes: false
      ignoreConstructors: false
      avoidExplicitReturnArrows: false
      # methodsIgnorePattern: ^_
  one-var:
    - error
    - never # always
  one-var-declaration-per-line:
    - error
    - initializations
  operator-assignment:
    - error
    - always
  operator-linebreak:
    - error
    - after
    - overrides:
        ?: before
        :: before
  padded-blocks:
    - error
    - never # always
    - allowSingleLineBlocks: false
  padding-line-between-statements:
    - error
    # - has some options
  prefer-arrow-callback:
    - error
    - allowNamedFunctions: false
      allowUnboundThis: true
  prefer-const:
    - error
    - destructuring: any
      ignoreReadBeforeAssign: false
  prefer-destructuring:
    - error
    - array: true
      object: true
  prefer-exponentiation-operator:
    - error
  prefer-named-capture-group:
    - error
  prefer-numeric-literals:
    - error
  prefer-object-has-own:
    - error
  prefer-object-spread:
    - error
  prefer-promise-reject-errors:
    - error
    - allowEmptyReject: false
  prefer-regex-literals:
    - error
    - disallowRedundantWrapping: false
  prefer-rest-params:
    - error
  prefer-spread:
    - error
  prefer-template:
    - error
  quote-props:
    - error
    - as-needed # always
    - keywords: false
      unnecessary: true
      numbers: false
  radix:
    - error
    - always
  require-atomic-updates:
    - error
    - allowProperties: false
  require-await:
    - error
  require-unicode-regexp:
    - error
  require-yield:
    - error
  rest-spread-spacing:
    - error
    - never
  semi-spacing:
    - error
    - before: false
      after: true
  semi-style:
    - error
    - last
  sort-imports:
    - error
    - ignoreCase: false
      ignoreDeclarationSort: false
      ignoreMemberSort: false
      memberSyntaxSortOrder:
        - none
        - all
        - multiple
        - single
      allowSeparatedGroups: false
  sort-keys:
    - off # error
    - asc
    - caseSensitive: true
      minKeys: 2
      natural: false
      allowLineSeparatedGroups: false
  sort-vars:
    - error
    - ignoreCase: false
  space-before-blocks:
    - error
    - always
  space-before-function-paren:
    - error
    - always
  space-in-parens:
    - error
    - never
  space-infix-ops:
    - error
    - int32Hint: false
  space-unary-ops:
    - error
    - words: true
      nonwords: false
      overrides: {}
  spaced-comment:
    - error
    - always
    - markers: []
      exceptions: []
  strict:
    - error
    - safe
  switch-colon-spacing:
    - error
    - before: false
      after: true
  symbol-description:
    - error
  template-curly-spacing:
    - error
    - never
  template-tag-spacing:
    - error
    - never
  unicode-bom:
    - error
    - never
  use-isnan:
    - error
    - enforceForSwitchCase: true
      enforceForIndexOf: false
  valid-typeof:
    - error
    - requireStringLiterals: false
  vars-on-top:
    - error
  wrap-iife:
    - error
    - outside
    - functionPrototypeMethods: false
  wrap-regex:
    - error
  yield-star-spacing:
    - error
    - before: false
      after: true
  yoda:
    - error
    - never
